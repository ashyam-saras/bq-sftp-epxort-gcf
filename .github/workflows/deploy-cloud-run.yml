name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/deploy-cloud-run.yml'
  workflow_dispatch:

env:
  PROJECT_ID: insightsprod
  SERVICE_NAME: bq-sftp-export
  ARTIFACT_REPOSITORY: sftp-export
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        
    - name: Authorize Docker push
      run: gcloud auth configure-docker
      
    - name: Build and push image to Google Container Registry
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}:${{ github.sha }}
        
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}:${{ github.sha }}
        env_vars: |
          SFTP_HOST=${{ vars.SFTP_HOST }}
          SFTP_USERNAME=${{ vars.SFTP_USERNAME }}
          SFTP_PASSWORD=${{ secrets.SFTP_PASSWORD }}
          GCS_BUCKET=${{ vars.GCS_BUCKET }}
          EXPORT_METADATA_TABLE=${{ vars.EXPORT_METADATA_TABLE }}
          SFTP_DIRECTORY=${{ vars.SFTP_DIRECTORY }}
        timeout: 900s
        flags: --no-allow-unauthenticated --min-instances=0 --max-instances=10 --concurrency=1 --memory=1Gi --cpu=1
        
    - name: Show Service URL
      run: echo "Service URL ${{ steps.deploy.outputs.url }}"